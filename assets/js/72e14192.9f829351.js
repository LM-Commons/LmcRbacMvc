"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[814],{3744:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var t=i(4848),r=i(8453);const o={sidebar_position:3},s="Quick Start",c={id:"quick-start",title:"Quick Start",description:"In this section, you will learn:",source:"@site/docs/quick-start.md",sourceDirName:".",slug:"/quick-start",permalink:"/LmcRbacMvc/docs/quick-start",draft:!1,unlisted:!1,editUrl:"https://github.com/lm-commons/lmcrbacmvc/tree/master/docs/docs/quick-start.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Requirements and Installation",permalink:"/LmcRbacMvc/docs/installation"},next:{title:"Role providers",permalink:"/LmcRbacMvc/docs/role-providers"}},a={},d=[{value:"Specifying an identity provider",id:"specifying-an-identity-provider",level:2},{value:"Adding a guard",id:"adding-a-guard",level:2},{value:"Adding a role provider",id:"adding-a-role-provider",level:2},{value:"Registering a strategy",id:"registering-a-strategy",level:2},{value:"Using the authorization service",id:"using-the-authorization-service",level:2}];function l(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"quick-start",children:"Quick Start"}),"\n",(0,t.jsx)(n.p,{children:"In this section, you will learn:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"How to set up the module"}),"\n",(0,t.jsx)(n.li,{children:"How to specify an identity provider"}),"\n",(0,t.jsx)(n.li,{children:"How to add a simple role provider"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Before starting the quick start, make sure you have properly installed the module by following the instructions in\nthe README file."}),"\n",(0,t.jsx)(n.h2,{id:"specifying-an-identity-provider",children:"Specifying an identity provider"}),"\n",(0,t.jsxs)(n.p,{children:["By default, LmcRbacMvc internally uses the ",(0,t.jsx)(n.code,{children:"Laminas\\Authentication\\AuthenticationService"})," service key to retrieve the user (logged or\nnot). Therefore, you must implement and register this service in your application by adding these lines in your ",(0,t.jsx)(n.code,{children:"module.config.php"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"return [\n    'service_manager' => [\n        'factories' => [\n\t        'Laminas\\Authentication\\AuthenticationService' => function($sm) {\n\t            // Create your authentication service!\n\t        }\n\t    ]\n    ]\n];\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["If you are also using the ",(0,t.jsx)(n.a,{href:"https://github.com/lm-commons/lmcuser",children:"LmcUser"})," package, then the ",(0,t.jsx)(n.code,{children:"Laminas\\Authentication\\AuthenticationService"})," will be provided for you and there is no need to implement your own."]})}),"\n",(0,t.jsxs)(n.p,{children:["The identity given by ",(0,t.jsx)(n.code,{children:"Laminas\\Authentication\\AuthenticationService"})," must implement ",(0,t.jsx)(n.code,{children:"LmcRbacMvc\\Identity\\IdentityInterface"}),"."]}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"Note that the default identity provided with Laminas does not implement this interface, neither does the LmcUser suite."})}),"\n",(0,t.jsxs)(n.p,{children:["LmcRbacMvc is flexible enough to use something other than the built-in ",(0,t.jsx)(n.code,{children:"AuthenticationService"}),", by specifying custom\nidentity providers. For more information, refer ",(0,t.jsx)(n.a,{href:"/LmcRbacMvc/docs/role-providers#identity-providers",children:"to this section"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"adding-a-guard",children:"Adding a guard"}),"\n",(0,t.jsxs)(n.p,{children:["A guard allows your application to block access to routes and/or controllers using a simple syntax. For instance, this configuration\ngrants access to any route that begins with ",(0,t.jsx)(n.code,{children:"admin"})," (or is exactly ",(0,t.jsx)(n.code,{children:"admin"}),") to the ",(0,t.jsx)(n.code,{children:"admin"})," role only:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"return [\n    'lmc_rbac' => [\n        'guards' => [\n\t        'LmcRbacMvc\\Guard\\RouteGuard' => [\n                'admin*' => ['admin']\n\t        ]\n        ]\n    ]\n];\n"})}),"\n",(0,t.jsxs)(n.p,{children:["LmcRbacMvc has several built-in guards, and you can also register your own guards. For more information, refer\n",(0,t.jsx)(n.a,{href:"/LmcRbacMvc/docs/guards#built-in-guards",children:"to this section"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"adding-a-role-provider",children:"Adding a role provider"}),"\n",(0,t.jsx)(n.p,{children:"RBAC model is based on roles. Therefore, for LmcRbacMvc to work properly, it must be aware of all the roles that are\nused inside your application."}),"\n",(0,t.jsxs)(n.p,{children:["This configuration creates an ",(0,t.jsx)(n.em,{children:"admin"})," role that has a child role called ",(0,t.jsx)(n.em,{children:"member"}),". The ",(0,t.jsx)(n.em,{children:"admin"})," role automatically\ninherits the ",(0,t.jsx)(n.em,{children:"member"})," permissions."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"return [\n    'lmc_rbac' => [\n        'role_provider' => [\n\t        'LmcRbacMvc\\Role\\InMemoryRoleProvider' => [\n\t            'admin' => [\n\t                'children'    => ['member'],\n\t                'permissions' => ['delete']\n\t            ],\n\t\t        'member' => [\n\t\t            'permissions' => ['edit']\n\t\t        ]\n\t        ]\n\t    ]\n    ]\n];\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In this example, the ",(0,t.jsx)(n.em,{children:"admin"})," role has two permissions: ",(0,t.jsx)(n.code,{children:"delete"})," and ",(0,t.jsx)(n.code,{children:"edit"})," (because it inherits the permissions from\nits child), while the ",(0,t.jsx)(n.em,{children:"member"})," role only has the ",(0,t.jsx)(n.code,{children:"edit"})," permission."]}),"\n",(0,t.jsxs)(n.p,{children:["LmcRbacMvc has several built-in role providers, and you can also register your own role providers. For more information,\nrefer ",(0,t.jsx)(n.a,{href:"/LmcRbacMvc/docs/role-providers#built-in-role-providers",children:"to this section"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"registering-a-strategy",children:"Registering a strategy"}),"\n",(0,t.jsxs)(n.p,{children:["When a guard blocks access to a route/controller, or if you throw the ",(0,t.jsx)(n.code,{children:"LmcRbacMvc\\Exception\\UnauthorizedException"}),"\nexception in your service, LmcRbacMvc automatically performs some logic for you depending on the view strategy used."]}),"\n",(0,t.jsxs)(n.p,{children:['For instance, if you want LmcRbacMvc to automatically redirect all unauthorized requests to the "login" route, add\nthe following code in the ',(0,t.jsx)(n.code,{children:"onBootstrap"})," method of your ",(0,t.jsx)(n.code,{children:"Module.php"})," class:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"public function onBootstrap(MvcEvent $e)\n{\n    $app = $e->getApplication();\n    $sm = $app->getServiceManager();\n    $em = $app->getEventManager();\n    \n    $listener = $sm->get(\\LmcRbacMvc\\View\\Strategy\\RedirectStrategy::class);\n    $listener->attach($em);\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["By default, ",(0,t.jsx)(n.code,{children:"RedirectStrategy"}),' redirects all unauthorized requests to a route named "login" when the user is not connected\nand to a route named "home" when the user is connected. This is, of course, entirely configurable.']}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["For flexibility purposes, LmcRbacMvc ",(0,t.jsx)(n.strong,{children:"does not"})," register any strategy for you by default!"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For more information about built-in strategies, refer ",(0,t.jsx)(n.a,{href:"/LmcRbacMvc/docs/strategies#built-in-strategies",children:"to this section"}),".\n",(0,t.jsx)(n.a,{href:"/LmcRbacMvc/docs/strategies",children:"to this section"})]}),"\n",(0,t.jsx)(n.h2,{id:"using-the-authorization-service",children:"Using the authorization service"}),"\n",(0,t.jsx)(n.p,{children:"Now that LmcRbacMvc is properly configured, you can inject the authorization service into any class and use it to check\nif the current identity is granted to do something."}),"\n",(0,t.jsxs)(n.p,{children:["The authorization service is registered inside the service manager using the following key: ",(0,t.jsx)(n.code,{children:"LmcRbacMvc\\Service\\AuthorizationService"}),".\nOnce injected, you can use it as follows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"use LmcRbacMvc\\Exception\\UnauthorizedException;\n\nclass ActionController extends  \\Laminas\\Mvc\\Controller\\AbstractActionController {\npublic function delete()\n{\n    if (!$this->authorizationService->isGranted('delete')) {\n        throw new UnauthorizedException();\n    }\n\n    // Delete the post\n}\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>c});var t=i(6540);const r={},o=t.createContext(r);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);